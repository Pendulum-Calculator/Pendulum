{"version":3,"sources":["../../js/canvas/types.ts"],"names":["Dataset","id","Curve","vertices","lc","intervals","faces","Error","Surface","Solid","Function1V","f","i","x","push","Vector3","X","Y","set","Function2V","y","Parametric1v","u","Parametric2V","v","Parametric3V","w"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\r\nimport {Locator} from \"./locator\";\r\nimport {Graph} from \"./graph\";\r\nimport { Vector3 } from \"three\";\r\n\r\nabstract class Dataset{\r\n    abstract id: string;\r\n    abstract initialize(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[]): void;\r\n    abstract update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[]):void;\r\n}\r\n\r\nclass Curve extends Dataset {\r\n    vertices: THREE.Vector3[] = [];\r\n    constructor(public id: string) {\r\n        super();\r\n    }\r\n    initialize(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[] | undefined): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[] | undefined): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nclass Surface extends Dataset {\r\n    vertices: THREE.Vector3[] = [];\r\n    faces: THREE.Face3[] =  [];\r\n    constructor(public id:string){\r\n        super();\r\n    }\r\n    initialize(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[] | undefined): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces: THREE.Face3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nclass Solid extends Dataset {\r\n    constructor(public id: string){\r\n        super();\r\n    }\r\n    initialize(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces?: THREE.Face3[] | undefined): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces: THREE.Face3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\ninterface ScalFunc {\r\n    f(x?: number, y?: number): number;\r\n}\r\n\r\ninterface VecFunc {\r\n    f(u?:number, v?:number, w?:number): number[];\r\n}\r\n\r\nclass Function1V extends Curve implements ScalFunc {\r\n    f: (x: number) => number;\r\n    constructor(id:string, f:(x:number)=>number){\r\n        super(id);\r\n        this.f=f;\r\n    }\r\n    initialize(lc: Locator, intervals: number[][], vertices: THREE.Vector3[]): void {\r\n        for (let i = 0; i <=200; i += 1) {\r\n            let x = i/200 * (intervals[0][1] - intervals[0][0]) + intervals[0][0];\r\n            vertices.push(new Vector3(lc.X(x), lc.Y(x, this.f(x), 0), 0));\r\n        }\r\n    }\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[]): void {\r\n        for(let i = 0; i<=200; i+=1){\r\n            let x = i/200 * (intervals[0][1] - intervals[0][0]) + intervals[0][0];\r\n            vertices[i].set(lc.X(x), lc.Y(x,this.f(x), 0), 0);\r\n        }\r\n    }\r\n}\r\n\r\nclass Function2V extends Surface implements ScalFunc{\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces: THREE.Face3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    f(x: number, y: number): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\n\r\nclass Parametric1v extends Curve implements VecFunc{\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    f(u: number): number[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    \r\n}\r\n\r\nclass Parametric2V extends Surface implements VecFunc{\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces: THREE.Face3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    f(u: number, v: number): number[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}\r\n\r\nclass Parametric3V extends Solid implements VecFunc{\r\n    update(lc: Locator, intervals: number[][], vertices: THREE.Vector3[], faces: THREE.Face3[]): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    f(u: number, v: number, w: number): number[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nexport{\r\n    Dataset,\r\n    Curve,\r\n    Surface,\r\n    Solid,\r\n    ScalFunc as Function, \r\n    VecFunc as Parametric,\r\n    Function1V,\r\n    Function2V,\r\n    Parametric1v,\r\n    Parametric2V,\r\n    Parametric3V\r\n}"],"file":"types.js"}