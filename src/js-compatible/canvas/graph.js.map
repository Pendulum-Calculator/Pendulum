{"version":3,"sources":["../../js/canvas/graph.ts"],"names":["materials","standard","THREE","MeshPhongMaterial","opacity","transparent","side","DoubleSide","color","opaque","flat","MeshBasicMaterial","line","LineBasicMaterial","Graph","dataset","graphics","material","id","initialized","PIXIGraph","PIXIObject","vertices","PIXI","Graphics","initialize","lc","update","THREEGraph","THREEObject","geometry","faces","Geometry","Mesh"],"mappings":"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","sourcesContent":["//Module import\r\nimport * as THREE from 'three';\r\nimport * as PIXI from 'pixi.js';\r\nimport { Dataset,Curve,Surface,Solid} from './types';\r\nimport { Graphics } from './graphics';\r\nconst materials = {\r\n    standard: new THREE.MeshPhongMaterial({\r\n        opacity: 0.8,\r\n        transparent: true,\r\n        side: THREE.DoubleSide,\r\n        color: 0x7890ab\r\n    }),\r\n    opaque: new THREE.MeshPhongMaterial({\r\n        side: THREE.DoubleSide,\r\n        color: 0x7890ab\r\n    }),\r\n    flat: new THREE.MeshBasicMaterial({\r\n        color: 0x7890ab,\r\n        opacity: 0.8,\r\n        transparent: true,\r\n    }),\r\n    line: new THREE.LineBasicMaterial({\r\n        color: 0x7890ab,\r\n        opacity: 0.8\r\n    })\r\n};\r\n/**\r\n * Each Graph provides an interface for specific\r\n * datasets to interact with the graphics library\r\n */\r\nabstract class Graph {\r\n    id: string;\r\n    initialized = false;\r\n    constructor(public dataset: Dataset, public graphics: Graphics, public color: number, public material?: THREE.Material) {\r\n        this.id = dataset.id;\r\n    }\r\n    abstract initialize(): void;\r\n    abstract update(): void;\r\n}\r\n\r\n/**\r\n * dataset representations through PIXI\r\n */\r\nclass PIXIGraph extends Graph{\r\n    PIXIObject: PIXI.Graphics;\r\n    vertices: THREE.Vector3[];\r\n    constructor(dataset: Dataset, graphics: Graphics, color: number){\r\n        super(dataset, graphics, color);\r\n        this.PIXIObject= new PIXI.Graphics();\r\n        this.vertices = [];\r\n    }\r\n    initialize(): void {\r\n        if (this.initialized) return;\r\n        this.dataset.initialize(this.graphics.lc, this.vertices);\r\n        this.initialized = true;\r\n    }\r\n    update():void{\r\n        this.dataset.update(this.graphics.lc, this.vertices);\r\n    }\r\n}\r\n\r\n/**\r\n * dataset representations through THREE\r\n */\r\nclass THREEGraph extends Graph {\r\n    THREEObject: THREE.Mesh;\r\n    geometry: THREE.Geometry;\r\n    vertices: THREE.Vector3[];\r\n    faces: THREE.Face3[];\r\n    static getMaterial(color: number, material: new ({ }) => THREE.Material, opacity: number): THREE.Material {\r\n        return new material({\r\n            opacity: 0.8,\r\n            transparent: (opacity === 1) ? false : true,\r\n            side: THREE.DoubleSide,\r\n            color: 0x7890ab\r\n        });\r\n    }\r\n    constructor(dataset: Dataset, graphics: Graphics, color: number, material: THREE.Material = materials.standard) {\r\n        super(dataset, graphics, color, material);\r\n        //Inject color into the material \r\n        //@ts-ignore\r\n        material.color = color;\r\n        this.geometry = new THREE.Geometry();\r\n        this.faces=this.geometry.faces;\r\n        this.vertices = this.geometry.vertices;\r\n        this.THREEObject = new THREE.Mesh(this.geometry, material);\r\n    }\r\n    initialize(): void {\r\n        if(this.initialized) return;\r\n        this.dataset.initialize(this.graphics.lc, this.vertices, this.faces);\r\n        this.initialized = true;\r\n    }\r\n    update(): void {\r\n        this.dataset.update(this.graphics.lc, this.vertices, this.faces)\r\n    }\r\n}\r\n\r\nexport {\r\n    Graph,\r\n    PIXIGraph,\r\n    THREEGraph\r\n}"],"file":"graph.js"}