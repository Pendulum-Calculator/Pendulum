{"version":3,"sources":["../../js/canvas/graphics.ts"],"names":["Graphics","canvas","id","domObject","rootScene","width","height","offsetWidth","offsetHeight","appendChild","removeChild","Graphics3D","renderer","lights","camera","createWebGLRenderer","domElement","THREE","Scene","topLight","DirectionalLight","position","set","addLight","botLight","ambientLight","AmbientLight","createPerspectiveCamera","name","light","add","remove","WebGLRenderer","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","aspect","PerspectiveCamera","y","lookAt","up","render","updateProjectionMatrix","OrthographicCamera","Graphics2D","app","PIXI","Application","transparent","resolution","view","stage","autoDensity","resize","$","outerWidth","outerHeight","updateData"],"mappings":"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","sourcesContent":["//Module import\r\nimport * as THREE from 'three';\r\nimport * as PIXI from 'pixi.js';\r\nimport {Locator} from './locator';\r\nimport 'jquery';\r\n/**\r\n * A wrapper around THREE and PIXI rendering engines to give them the same syntax \r\n * to handle with.\r\n */\r\nabstract class Graphics {\r\n    abstract id: string;\r\n    abstract domObject: HTMLCanvasElement;\r\n    abstract rootScene: any;\r\n    width:number;\r\n    height:number;\r\n    /**\r\n     * Initializes a common interface for graphics manipulations\r\n     * @param canvas The div in which the graphics renderer sits in\r\n     */\r\n    constructor(public canvas:HTMLDivElement){\r\n        this.width = canvas.offsetWidth;\r\n        this.height = canvas.offsetHeight;\r\n    }\r\n    /**\r\n     * Updates all the datasets (graphed functions) in this canvas\r\n     */\r\n    abstract updateData():void;\r\n    /**\r\n     * Called to render the root scene\r\n     */\r\n    abstract render(): void;\r\n    abstract onResize(): void;\r\n    /**\r\n     * Attaches this.domObject to the specified panel\r\n     */\r\n    public attach(): void {\r\n        this.canvas.appendChild(this.domObject);\r\n    }\r\n    /**\r\n     * Detaches this.domObject from the specified panel\r\n     */\r\n    public detach(): void {\r\n        this.canvas.removeChild(this.domObject);\r\n    }\r\n\r\n}\r\n\r\nclass Graphics3D extends Graphics {\r\n    domObject: HTMLCanvasElement;\r\n    rootScene: THREE.Scene;\r\n    private renderer:THREE.Renderer;\r\n    lights: {name?:THREE.Light}={};\r\n    camera: THREE.Camera;\r\n    constructor(public canvas:HTMLDivElement, public id = \"g3d\"){\r\n        super(canvas);\r\n        this.renderer = this.createWebGLRenderer();\r\n        this.domObject = this.renderer.domElement;\r\n        //Attach dom object\r\n        this.domObject.id = id;\r\n        //Create scene\r\n        this.rootScene = new THREE.Scene();\r\n        //Setup lighting\r\n        let topLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n        topLight.position.set(0, 0, 5);\r\n        this.addLight(\"top\", topLight);\r\n        let botLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n        botLight.position.set(0, 0, -5);\r\n        this.addLight(\"bot\", botLight);\r\n        let ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n        this.addLight(\"ambient\", ambientLight);\r\n        //Setup camera\r\n        this.camera=this.createPerspectiveCamera();\r\n    }\r\n    public addLight(name: string, light:THREE.Light){\r\n        this.lights[name]=light;\r\n        this.rootScene.add(light);\r\n    }\r\n    public removeLight(name: string){\r\n        this.rootScene.remove(this.lights[name]);\r\n        delete this.lights[name];\r\n    }\r\n    private createWebGLRenderer():THREE.WebGLRenderer{\r\n        let renderer = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(this.width, this.height);\r\n        return renderer;\r\n    }\r\n    private createPerspectiveCamera():THREE.PerspectiveCamera{\r\n        let aspect = this.width / this.height;\r\n        let camera = new THREE.PerspectiveCamera(75, aspect, 0.01, 500);\r\n        camera.position.y = -5;\r\n        camera.lookAt(0, 0, 0);\r\n        camera.up.set(0, 0, 1);\r\n        return camera\r\n    }\r\n    updateData(){\r\n\r\n    }\r\n    render(){\r\n        this.renderer.render(this.rootScene, this.camera);\r\n    }\r\n    onResize() {\r\n        this.width = this.canvas.offsetWidth;\r\n        this.height = this.canvas.offsetHeight;\r\n        this.renderer.setSize(this.width, this.height);\r\n        if(this.camera instanceof THREE.PerspectiveCamera){\r\n            this.camera.aspect = this.width / this.height;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n        if (this.camera instanceof THREE.OrthographicCamera)\r\n            this.camera.updateProjectionMatrix();\r\n        this.renderer.render(this.rootScene, this.camera);\r\n    }\r\n}\r\n\r\nclass Graphics2D extends Graphics {\r\n    domObject: HTMLCanvasElement;\r\n    rootScene: PIXI.Container;\r\n    app: PIXI.Application;\r\n    private renderer:PIXI.Renderer;\r\n    constructor(public canvas:HTMLDivElement, public id = \"g2d\"){\r\n        super(canvas);\r\n        this.app = new PIXI.Application({\r\n            width: this.width,\r\n            height: this.height,\r\n            antialias: true, // default: false\r\n            transparent: true, // default: false\r\n            resolution: 1 // default: 1\r\n        });\r\n        this.domObject = (new PIXI.Application()).view;\r\n        this.domObject.id=id;\r\n        //Setup root scene\r\n        this.rootScene = this.app.stage;\r\n        //Setup renderer\r\n        this.renderer = this.app.renderer;\r\n        this.app.renderer.autoDensity = true;\r\n        //purpose served by autoDensity which takes into acount of the window.devicePixelRatio\r\n        // this.renderer.resolution = window.devicePixelRatio; \r\n        this.renderer.resize(this.width, this.height);\r\n        \r\n    }\r\n    updateData(){\r\n\r\n    }\r\n    render(){\r\n        this.app.render();\r\n    }\r\n    onResize(){\r\n        this.width=this.canvas.offsetWidth;\r\n        this.height=this.canvas.offsetHeight;\r\n        this.renderer.resize(this.width, this.height);\r\n        $(this.canvas).outerWidth(this.width);\r\n        $(this.canvas).outerHeight(this.height);\r\n        this.updateData();\r\n        this.render();\r\n    }\r\n}\r\n"],"file":"graphics.js"}