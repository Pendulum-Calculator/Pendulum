{"version":3,"sources":["../js/canvas.ts"],"names":["THREE","require","Locator","unitRatio","scalex","scaley","deltax","deltay","deltaX","deltaY","vertex","width","int","x","dpi","lc","X","module","exports"],"mappings":";;;;;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB,C,CAEA;;;IACMC,O;;;;;;SAEFC,S,GAAY,G;SACZC,M,GAAS,C;SACTC,M,GAAS,C;SACTC,M,GAAS,C;SACTC,M,GAAS,C;SACTC,M,GAAS,C;SACTC,M,GAAS,C;;;;;sBAEAC,M,EAA0B;AAC9B,aAAOC,KAAK,GAAG,CAAR,GAAaC,GAAD,CAAM,CAACC,CAAC,GAAGP,MAAL,IAAeQ,GAAf,GAAqBV,MAA3B,CAAZ,GAAiDI,MAAxD;AACJ,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGJ,IAAIO,EAAU,GAAG,IAAIb,OAAJ,EAAjB;AACAa,EAAE,CAACC,CAAH,CAAK,EAAL,EAAQ,EAAR,EAAW,EAAX;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,OAAjB","sourcesContent":["var THREE = require('three');\r\n\r\n//The class that converts virtual coordinate system to its graphics presentation\r\nclass Locator {\r\n    //Graphics units per virtual unit\r\n    unitRatio = 1.5;\r\n    scalex = 1;\r\n    scaley = 1;\r\n    deltax = 1;\r\n    deltay = 1;\r\n    deltaX = 0;\r\n    deltaY = 0;\r\n    constructor(scene )\r\n    public X(vertex: number[]): number {\r\n         return width / 2 + (int)((x + deltax) * dpi * scalex) + deltaX;\r\n    }\r\n    // public int X(float x, float y) {\r\n    //     return width / 2 + (int)((x + deltax) * dpi * scalex) + deltaX;\r\n    // }\r\n    // public int Y(float[] vertex) {\r\n    //     return Y(vertex[0], vertex[1]);\r\n    // }\r\n    // public int Y(float x, float y) {\r\n    //     return height / 2 - (int)((y + deltay) * scaley * dpi) - deltaY;\r\n    // }\r\n    // public int Width(float width) {\r\n    //     return X(width, 0) - X(0, 0);\r\n    // }\r\n    // public int Height(float height) {\r\n    //     return Y(0, height) - Y(0, 0);\r\n    // }\r\n    // public float x(int X, int Y) {\r\n    //     return (float)(X - deltaX - width / 2) / dpi / scalex - deltax;\r\n    // }\r\n    // public float y(int X, int Y) {\r\n    //     return (float)(-Y - deltaY + height / 2) / dpi / scaley - deltay;\r\n    // }\r\n    // public float width(int Width) {\r\n    //     return X(Width, 0) - X(0, 0);\r\n    // }\r\n    // public float height(int Height) {\r\n    //     return y(0, Height) - Y(0, 0);\r\n    // }\r\n\r\n    // //Pinned zooming\r\n    // public void zoom(int pinX, int pinY, float factorx, float factory) {\r\n    //     float pinx = x(pinX, pinY);\r\n    //     float piny = y(pinX, pinY);\r\n    //     scalex *= factorx;\r\n    //     scaley *= factory;\r\n    //     deltax = (pinx + deltax) / factorx - pinx;\r\n    //     deltay = (piny + deltay) / factory - piny;\r\n    // }\r\n}\r\n\r\nlet lc:Locator = new Locator();\r\nlc.X(12,12,11);\r\n\r\nmodule.exports = Locator;"],"file":"canvas.js"}